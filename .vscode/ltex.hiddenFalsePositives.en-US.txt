{"rule":"TOO_LONG_SENTENCE","sentence":"^\\Q@Lebre.2020 introduced a secure, vendor-neutral imaging architecture while \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniquí-|Maniquíes-)[0-9]+\\Q developed a SaaS platform for medical image processing as seen in \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniquí-|Maniquíes-)[0-9]+\\Q Additionally, \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniquí-|Maniquíes-)[0-9]+\\Q proposed a web-based medical image viewer architecture designed to facilitate efficient and accessible visualization of medical images through standard web technologies.\\E$"}
{"rule":"EN_UNPAIRED_BRACKETS","sentence":"^\\QMedical specialists depend on immediate access to diagnostic-quality images, but current tools lack interoperability and flexibility, preventing seamless expert involvement (see also \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniquí-|Maniquíes-)[0-9]+\\Q Patients ultimately experience delayed diagnoses and treatments—an especially serious issue when rapid intervention is needed.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QAnalyze Existing Technologies and Architectures .\\E$"}
{"rule":"PUNCTUATION_PARAGRAPH_END","sentence":"^\\QIteration 1: Analyze Existing Technologies and Standards (4 weeks)\nResearch medical imaging standards (e.g. DICOM) and architectures\nIdentify limitations in current solutions for sharing large image data\nDeliverable: Technology and requirements report\nIteration 2: Design the Architecture (2 weeks)\nDefine system requirements for collaboration workflow\nDesign a modular architecture for image transfer, storage, and access\nAddress compatibility with PACS/LIS and compliance needs (e.g., GDPR)\nDeliverable: Architecture design specification\nIteration 3: Implement Prototype – Core System (4 weeks)\nSet up development environment and tech stack\nImplement upload and storage modules for large image data\nDeliverable: Functional prototype for scan upload and retrieval\nIteration 4: Implement Prototype – Image Sharing Workflow (4 weeks)\nImplement the end-to-end workflow for second-opinion image sharing\nEnsure workflow consistency across roles (imaging staff, remote experts)\nDeliverable: Integrated image sharing workflow\nIteration 5: Implement Prototype – Data Testing (3 weeks)\nUpload and test 20–30 GB pathology scans\nMonitor system performance and reliability\nTroubleshoot edge cases and bottlenecks to further optimize the prototype\nDeliverable: Refined and scalable prototype with test results\nIteration 6: (Pre-)Validation – Refinement and Review (3 weeks)\nEnsure integration with test PACS or simulated clinical tools\nConduct internal review based on stakeholder scenarios\nDeliverable: Validation-ready prototype\nIteration 7: Evaluation – Validation and Use Case Execution (3 weeks)\nValidate the system through simulated second-opinion scenario, measuring key metrics (e.g., transfer speed, access latency)\nEvaluate system usability and integration from feedback by stakeholders\nAssess how the system functions under real-world conditions and in collaboration workflows\nDeliverable: Validation and evaluation report, including insights into performance and user experience\nIteration 8: Final Evaluation and Wrap-up (3 weeks)\nGather final stakeholder feedback from imaging technicians and medical experts\nPerform final evaluation of the architecture's ability to support remote diagnostic collaboration\nAnalyze feedback, identify areas for improvement, and finalize architecture\nDeliverable: Final system evaluation, including validated and evaluated architecture for supporting digital pathology workflows\\E$"}
{"rule":"PUNCTUATION_PARAGRAPH_END","sentence":"^\\QIteration 1: Analyze Existing Technologies and Standards (4 weeks)\nResearch medical imaging standards (e.g. DICOM) and architectures\nIdentify limitations in current solutions for sharing large image data\nDeliverable: Technology and requirements report\nIteration 2: Design the Architecture (2 weeks)\nDefine system requirements for collaboration workflow\nDesign a modular architecture for image transfer, storage, and access\nAddress compatibility with PACS/LIS and compliance needs (e.g., GDPR)\nDeliverable: Architecture design specification\nIteration 3: Implement Prototype – Core System (4 weeks)\nSet up development environment and tech stack\nImplement upload and storage modules for large image data\nDeliverable: Functional prototype for scan upload and retrieval\nIteration 4: Implement Prototype – Image Sharing Workflow (4 weeks)\nImplement the end-to-end workflow for second-opinion image sharing\nEnsure workflow consistency across roles (imaging staff, remote experts)\nDeliverable: Integrated image sharing workflow\nIteration 5: Implement Prototype – Data Testing (3 weeks)\nUpload and test 20–30 GB pathology scans\nMonitor system performance and reliability\nTroubleshoot edge cases and bottlenecks to further optimize the prototype\nDeliverable: Refined and scalable prototype with test results\nIteration 6: (Pre-)Validation – Refinement and Review (3 weeks)\nEnsure integration with test PACS or simulated clinical tools\nConduct internal review based on stakeholder scenarios\nDeliverable: Validation-ready prototype\nIteration 7: Evaluation – Validation and Use Case Execution (3 weeks)\nValidate the system through simulated second-opinion scenario, measuring key metrics (e.g., transfer speed, access latency)\nEvaluate system usability and integration from feedback by stakeholders\nAssess how the system functions under real-world conditions\nDeliverable: Validation and evaluation report, including insights into performance and user experience\nIteration 8: Final Evaluation and Wrap-up (3 weeks)\nGather final stakeholder feedback from imaging technicians and medical experts\nPerform final evaluation of the architecture's ability to support remote diagnostic collaboration\nAnalyze feedback, identify areas for improvement, and finalize architecture\nDeliverable: Final architecture evaluation (see \\E(?:Dummy|Ina|Jimmy-|Dummy-|Maniquí-|Maniquíes-)[0-9]+$"}
